// Code generated by MockGen. DO NOT EDIT.
// Source: /home/wil/dev/sro/gamedata-service/pkg/pb/gamedata_grpc.pb.go
//
// Generated by this command:
//
//	mockgen -source=/home/wil/dev/sro/gamedata-service/pkg/pb/gamedata_grpc.pb.go -destination=/home/wil/dev/sro/gamedata-service/pkg/pb/mocks/gamedata_grpc.pb.go
//

// Package mock_pb is a generated GoMock package.
package mock_pb

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGameDataServiceClient is a mock of GameDataServiceClient interface.
type MockGameDataServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockGameDataServiceClientMockRecorder
	isgomock struct{}
}

// MockGameDataServiceClientMockRecorder is the mock recorder for MockGameDataServiceClient.
type MockGameDataServiceClientMockRecorder struct {
	mock *MockGameDataServiceClient
}

// NewMockGameDataServiceClient creates a new mock instance.
func NewMockGameDataServiceClient(ctrl *gomock.Controller) *MockGameDataServiceClient {
	mock := &MockGameDataServiceClient{ctrl: ctrl}
	mock.recorder = &MockGameDataServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameDataServiceClient) EXPECT() *MockGameDataServiceClientMockRecorder {
	return m.recorder
}

// MockGameDataServiceServer is a mock of GameDataServiceServer interface.
type MockGameDataServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockGameDataServiceServerMockRecorder
	isgomock struct{}
}

// MockGameDataServiceServerMockRecorder is the mock recorder for MockGameDataServiceServer.
type MockGameDataServiceServerMockRecorder struct {
	mock *MockGameDataServiceServer
}

// NewMockGameDataServiceServer creates a new mock instance.
func NewMockGameDataServiceServer(ctrl *gomock.Controller) *MockGameDataServiceServer {
	mock := &MockGameDataServiceServer{ctrl: ctrl}
	mock.recorder = &MockGameDataServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameDataServiceServer) EXPECT() *MockGameDataServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedGameDataServiceServer mocks base method.
func (m *MockGameDataServiceServer) mustEmbedUnimplementedGameDataServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGameDataServiceServer")
}

// mustEmbedUnimplementedGameDataServiceServer indicates an expected call of mustEmbedUnimplementedGameDataServiceServer.
func (mr *MockGameDataServiceServerMockRecorder) mustEmbedUnimplementedGameDataServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGameDataServiceServer", reflect.TypeOf((*MockGameDataServiceServer)(nil).mustEmbedUnimplementedGameDataServiceServer))
}

// MockUnsafeGameDataServiceServer is a mock of UnsafeGameDataServiceServer interface.
type MockUnsafeGameDataServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeGameDataServiceServerMockRecorder
	isgomock struct{}
}

// MockUnsafeGameDataServiceServerMockRecorder is the mock recorder for MockUnsafeGameDataServiceServer.
type MockUnsafeGameDataServiceServerMockRecorder struct {
	mock *MockUnsafeGameDataServiceServer
}

// NewMockUnsafeGameDataServiceServer creates a new mock instance.
func NewMockUnsafeGameDataServiceServer(ctrl *gomock.Controller) *MockUnsafeGameDataServiceServer {
	mock := &MockUnsafeGameDataServiceServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeGameDataServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeGameDataServiceServer) EXPECT() *MockUnsafeGameDataServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedGameDataServiceServer mocks base method.
func (m *MockUnsafeGameDataServiceServer) mustEmbedUnimplementedGameDataServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGameDataServiceServer")
}

// mustEmbedUnimplementedGameDataServiceServer indicates an expected call of mustEmbedUnimplementedGameDataServiceServer.
func (mr *MockUnsafeGameDataServiceServerMockRecorder) mustEmbedUnimplementedGameDataServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGameDataServiceServer", reflect.TypeOf((*MockUnsafeGameDataServiceServer)(nil).mustEmbedUnimplementedGameDataServiceServer))
}
